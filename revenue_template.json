{
    "revenue": {
        "progression": {
            "ytd": {
                "query": "SELECT year_group, month_short_desc, total_price as total_revenue FROM ( SELECT DISTINCT year_group, month_no, month_short_desc, total_price FROM ( SELECT year_group, month, month_no, month_short_desc, SUM(extended_price) OVER (PARTITION BY year_group ORDER BY month_no) AS total_price FROM sales_revenue_by_financial_year WHERE year_group IN (date_range) GROUP BY year_group, month_no, month_short_desc, month, extended_price ) ORDER BY year_group, month_no );",
                "response_template_order": [
                    "start",
                    "end"                    
                ]
            },
            "yoy": {
                "query": " SELECT DISTINCT year, month, month_short_desc, total_price as total_revenue FROM ( SELECT year, month, CASE WHEN month = 1 THEN 'Jan' WHEN month = 2 THEN 'Feb' WHEN month = 3 THEN 'Mar' WHEN month = 4 THEN 'Apr' WHEN month = 5 THEN 'May' WHEN month = 6 THEN 'Jun' WHEN month = 7 THEN 'Jul' WHEN month = 8 THEN 'Aug' WHEN month = 9 THEN 'Sep' WHEN month = 10 THEN 'Oct' WHEN month = 11 THEN 'Nov' WHEN month = 12 THEN 'Dec' END AS month_short_desc, SUM(extended_price) OVER (PARTITION BY year ORDER BY month) AS total_price FROM sales_revenue WHERE year IN (date_range) GROUP BY year, month, month_short_desc, extended_price ) ORDER BY year, month;",
                "response_template_order": [
                    "years"                    
                ]
            }
            
        },
        "growth": {
            "ytd": {
                "query": "SELECT year_group, total_revenue, LAG(total_revenue) OVER (ORDER BY year_group) AS PreviousRevenue, (total_revenue - LAG(total_revenue) OVER (ORDER BY year_group)) / total_revenue AS RevenueDifference FROM ( SELECT year_group, SUM(extended_price) AS total_revenue FROM sales_revenue_by_financial_year GROUP BY year_group ) WHERE year_group IN (date_range); ",
                "response_template_order": [
                    "start",
                    "end"
                        ]
            },
            "yoy": {
                "query": "SELECT Year, total_revenue, LAG(total_revenue) OVER (ORDER BY Year) AS PreviousRevenue, (total_revenue - LAG(total_revenue) OVER (ORDER BY Year)) / total_revenue AS RevenueDifference FROM ( SELECT YEAR, SUM(extended_price) AS total_revenue FROM sales_revenue GROUP BY YEAR ) WHERE year IN (date_range);",
                "response_template_order": [
                    "years"
                    
                ]
            },
            "yoy_explore": {
                "query": "WITH YearlyRevenue AS ( SELECT year, NULL AS division, NULL AS department_description, NULL AS class_description, NULL AS subclass_description, SUM(extended_price) AS total_revenue FROM sales_revenue WHERE year IN (date_range) GROUP BY year UNION ALL SELECT year, division, NULL AS department_description, NULL AS class_description, NULL AS subclass_description, SUM(extended_price) AS total_revenue FROM sales_revenue WHERE year IN (date_range) GROUP BY year, division UNION ALL SELECT year, division, department_description, NULL AS class_description, NULL AS subclass_description, SUM(extended_price) AS total_revenue FROM sales_revenue WHERE year IN (date_range) GROUP BY year, division, department_description UNION ALL SELECT year, division, department_description, class_description, NULL AS subclass_description, SUM(extended_price) AS total_revenue FROM sales_revenue WHERE year IN (date_range) GROUP BY year, division, department_description, class_description UNION ALL SELECT year, division, department_description, class_description, subclass_description, SUM(extended_price) AS total_revenue FROM sales_revenue WHERE year IN (date_range) GROUP BY year, division, department_description, class_description, subclass_description ), RevenueWithChange AS ( SELECT year, division, department_description, class_description, subclass_description, total_revenue, LAG(total_revenue) OVER (PARTITION BY division, department_description, class_description, subclass_description ORDER BY year) AS prev_year_revenue FROM YearlyRevenue ) SELECT year, division, department_description, class_description, subclass_description, ROUND( (100.0 * (total_revenue - prev_year_revenue) / prev_year_revenue)::numeric, 2 )::float8 AS pct_change_revenue FROM RevenueWithChange WHERE prev_year_revenue IS NOT NULL ORDER BY year, division NULLS FIRST, department_description NULLS FIRST, class_description NULLS FIRST, subclass_description NULLS FIRST;",
                "response_template_order": [
                    "years"
            
                ]
            },
            "performance_metric": {
                "query1":"WITH latest_week AS ( SELECT week, year, week_start FROM weekly_sales_revenue ORDER BY week_start DESC LIMIT 1 ), latest_month AS ( SELECT month, year FROM weekly_sales_revenue WHERE year = (SELECT MAX(year) FROM weekly_sales_revenue) ORDER BY month DESC LIMIT 1 ), latest_year AS ( SELECT MAX(year) AS max_year FROM weekly_sales_revenue ), current_week_data AS ( SELECT sr.week, sr.year, CAST(SUM(sr.number_of_orders) AS FLOAT) AS current_week_qty FROM weekly_sales_revenue sr, latest_week lw WHERE sr.week = lw.week AND sr.year = lw.year GROUP BY sr.week, sr.year ), last_week_data AS ( SELECT sr.week, sr.year, CAST(SUM(sr.number_of_orders) AS FLOAT) AS last_week_qty FROM weekly_sales_revenue sr, latest_week lw WHERE sr.week_start = lw.week_start - interval '7 days' GROUP BY sr.week, sr.year ), current_month_data AS ( SELECT sr.month, sr.year, CAST(SUM(sr.number_of_orders) AS FLOAT) AS current_month_qty FROM weekly_sales_revenue sr, latest_month lm WHERE sr.month = lm.month AND sr.year = lm.year GROUP BY sr.month, sr.year ), last_year_same_month_data AS ( SELECT sr.month, sr.year, CAST(SUM(sr.number_of_orders) AS FLOAT) AS last_year_same_month_qty FROM weekly_sales_revenue sr, latest_month lm WHERE sr.month = lm.month AND sr.year = lm.year - 1 GROUP BY sr.month, sr.year ), current_year_data AS ( SELECT sr.year, CAST(SUM(sr.number_of_orders) AS FLOAT) AS current_year_qty FROM weekly_sales_revenue sr, latest_year ly WHERE sr.year = ly.max_year GROUP BY sr.year ), last_year_data AS ( SELECT sr.year, CAST(SUM(sr.number_of_orders) AS FLOAT) AS last_year_qty FROM weekly_sales_revenue sr, latest_year ly WHERE sr.year = ly.max_year - 1 GROUP BY sr.year ) SELECT current_week_data.current_week_qty, last_week_data.last_week_qty, current_month_data.current_month_qty, last_year_same_month_data.last_year_same_month_qty, current_year_data.current_year_qty, last_year_data.last_year_qty FROM current_week_data, last_week_data, current_month_data, last_year_same_month_data, current_year_data, last_year_data;",
                "query2":"WITH latest_week AS ( SELECT week_start FROM weekly_sales_revenue ORDER BY week_start DESC LIMIT 1 ), last_week AS ( SELECT week_start FROM weekly_sales_revenue WHERE week_start < (SELECT week_start FROM latest_week) ORDER BY week_start DESC LIMIT 1 ), latest_month AS ( SELECT EXTRACT(MONTH FROM week_start) AS month_no, EXTRACT(YEAR FROM week_start) AS year, MIN(week_start) AS month_start FROM weekly_sales_revenue GROUP BY EXTRACT(MONTH FROM week_start), EXTRACT(YEAR FROM week_start) ORDER BY year DESC, month_no DESC LIMIT 1 ), same_month_last_year AS ( SELECT EXTRACT(MONTH FROM week_start) AS month_no, EXTRACT(YEAR FROM week_start) AS year, MIN(week_start) AS month_start FROM weekly_sales_revenue WHERE EXTRACT(MONTH FROM week_start) = (SELECT month_no FROM latest_month) AND EXTRACT(YEAR FROM week_start) = (SELECT year FROM latest_month) - 1 GROUP BY EXTRACT(MONTH FROM week_start), EXTRACT(YEAR FROM week_start) LIMIT 1 ), current_year AS ( SELECT EXTRACT(YEAR FROM week_start) AS year, MIN(week_start) AS year_start FROM weekly_sales_revenue GROUP BY EXTRACT(YEAR FROM week_start) ORDER BY year DESC LIMIT 1 ), previous_year AS ( SELECT EXTRACT(YEAR FROM week_start) AS year, MIN(week_start) AS year_start FROM weekly_sales_revenue WHERE EXTRACT(YEAR FROM week_start) = (SELECT year FROM current_year) - 1 GROUP BY EXTRACT(YEAR FROM week_start) LIMIT 1 ) SELECT (SELECT week_start FROM latest_week) AS current_week_start, (SELECT week_start FROM last_week) AS last_week_start, (SELECT month_start FROM latest_month) AS current_month_start, (SELECT month_start FROM same_month_last_year) AS same_month_last_year_start, (SELECT year_start FROM current_year) AS current_year_start, (SELECT year_start FROM previous_year) AS previous_year_start;",
                "query3":"SELECT year, AVG(total_sales_value)::FLOAT8 AS average_sales_value FROM weekly_sales_revenue GROUP BY year ORDER BY year DESC;",
                "query4":"SELECT year, SUM(total_sales_value) / SUM(number_of_orders) AS avg_sales_per_order FROM weekly_sales_revenue GROUP BY year ORDER BY year;",
                "response_template_order":[
                        "start",
                         "end"

                 ] 
        }    
            
        }
    }
}